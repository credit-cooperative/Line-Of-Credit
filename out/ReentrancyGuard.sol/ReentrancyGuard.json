{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{\"contracts/utils/CreditLib.sol:CreditLib\":\"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87\",\"contracts/utils/CreditListLib.sol:CreditListLib\":\"0x9cbe9741b3503a790e69e1587b5d51c0056154dc\",\"contracts/utils/EscrowLib.sol:EscrowLib\":\"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2\",\"contracts/utils/LineFactoryLib.sol:LineFactoryLib\":\"0x2b721a999b83cbcc1dbd697a27199d5b4be70102\",\"contracts/utils/LineLib.sol:LineLib\":\"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812\",\"contracts/utils/SpigotedLineLib.sol:SpigotedLineLib\":\"0x274946031d204567281f7616718b4abb940ef784\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/contracts/src/v0.8/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/contracts/src/v0.8/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"london","libraries":{"contracts/utils/CreditLib.sol:CreditLib":"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87","contracts/utils/CreditListLib.sol:CreditListLib":"0x9cbe9741b3503a790e69e1587b5d51c0056154dc","contracts/utils/EscrowLib.sol:EscrowLib":"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2","contracts/utils/LineFactoryLib.sol:LineFactoryLib":"0x2b721a999b83cbcc1dbd697a27199d5b4be70102","contracts/utils/LineLib.sol:LineLib":"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812","contracts/utils/SpigotedLineLib.sol:SpigotedLineLib":"0x274946031d204567281f7616718b4abb940ef784"}},"sources":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":105927,"exportedSymbols":{"ReentrancyGuard":[105926]},"nodeType":"SourceUnit","src":"109:3131:113","nodes":[{"id":105859,"nodeType":"PragmaDirective","src":"109:24:113","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":105926,"nodeType":"ContractDefinition","src":"886:2353:113","nodes":[{"id":105863,"nodeType":"VariableDeclaration","src":"1674:40:113","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:113","scope":105926,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":105862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:113","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":105866,"nodeType":"VariableDeclaration","src":"1720:36:113","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:113","scope":105926,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":105865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:113","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":105868,"nodeType":"VariableDeclaration","src":"1763:23:113","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:113","scope":105926,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":105871,"nodeType":"ErrorDefinition","src":"1850:37:113","nodes":[],"documentation":{"id":105869,"nodeType":"StructuredDocumentation","src":"1793:52:113","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:113","parameters":{"id":105870,"nodeType":"ParameterList","parameters":[],"src":"1884:2:113"}},{"id":105879,"nodeType":"FunctionDefinition","src":"1893:52:113","nodes":[],"body":{"id":105878,"nodeType":"Block","src":"1907:38:113","nodes":[],"statements":[{"expression":{"id":105876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":105874,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105868,"src":"1917:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":105875,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105863,"src":"1927:11:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":105877,"nodeType":"ExpressionStatement","src":"1917:21:113"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":105872,"nodeType":"ParameterList","parameters":[],"src":"1904:2:113"},"returnParameters":{"id":105873,"nodeType":"ParameterList","parameters":[],"src":"1907:0:113"},"scope":105926,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":105890,"nodeType":"ModifierDefinition","src":"2322:103:113","nodes":[],"body":{"id":105889,"nodeType":"Block","src":"2346:79:113","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":105882,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105906,"src":"2356:19:113","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":105883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:113","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105884,"nodeType":"ExpressionStatement","src":"2356:21:113"},{"id":105885,"nodeType":"PlaceholderStatement","src":"2387:1:113"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":105886,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105914,"src":"2398:18:113","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":105887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:113","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105888,"nodeType":"ExpressionStatement","src":"2398:20:113"}]},"documentation":{"id":105880,"nodeType":"StructuredDocumentation","src":"1951:366:113","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:113","parameters":{"id":105881,"nodeType":"ParameterList","parameters":[],"src":"2343:2:113"},"virtual":false,"visibility":"internal"},{"id":105906,"nodeType":"FunctionDefinition","src":"2431:307:113","nodes":[],"body":{"id":105905,"nodeType":"Block","src":"2470:268:113","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":105895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":105893,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105868,"src":"2558:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":105894,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105866,"src":"2569:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:113","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":105900,"nodeType":"IfStatement","src":"2554:86:113","trueBody":{"id":105899,"nodeType":"Block","src":"2578:62:113","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":105896,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105871,"src":"2599:28:113","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":105897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:113","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105898,"nodeType":"RevertStatement","src":"2592:37:113"}]}},{"expression":{"id":105903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":105901,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105868,"src":"2714:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":105902,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105866,"src":"2724:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":105904,"nodeType":"ExpressionStatement","src":"2714:17:113"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:113","parameters":{"id":105891,"nodeType":"ParameterList","parameters":[],"src":"2459:2:113"},"returnParameters":{"id":105892,"nodeType":"ParameterList","parameters":[],"src":"2470:0:113"},"scope":105926,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":105914,"nodeType":"FunctionDefinition","src":"2744:208:113","nodes":[],"body":{"id":105913,"nodeType":"Block","src":"2782:170:113","nodes":[],"statements":[{"expression":{"id":105911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":105909,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105868,"src":"2924:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":105910,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105863,"src":"2934:11:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":105912,"nodeType":"ExpressionStatement","src":"2924:21:113"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:113","parameters":{"id":105907,"nodeType":"ParameterList","parameters":[],"src":"2771:2:113"},"returnParameters":{"id":105908,"nodeType":"ParameterList","parameters":[],"src":"2782:0:113"},"scope":105926,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":105925,"nodeType":"FunctionDefinition","src":"3131:106:113","nodes":[],"body":{"id":105924,"nodeType":"Block","src":"3195:42:113","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":105922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":105920,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105868,"src":"3212:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":105921,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105866,"src":"3223:7:113","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:113","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":105919,"id":105923,"nodeType":"Return","src":"3205:25:113"}]},"documentation":{"id":105915,"nodeType":"StructuredDocumentation","src":"2958:168:113","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:113","parameters":{"id":105916,"nodeType":"ParameterList","parameters":[],"src":"3163:2:113"},"returnParameters":{"id":105919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105925,"src":"3189:4:113","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":105917,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:113","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:113"},"scope":105926,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":105860,"nodeType":"StructuredDocumentation","src":"135:750:113","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[105926],"name":"ReentrancyGuard","nameLocation":"904:15:113","scope":105927,"usedErrors":[105871],"usedEvents":[]}],"license":"MIT"},"id":113}