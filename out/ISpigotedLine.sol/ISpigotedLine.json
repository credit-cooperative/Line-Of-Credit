{"abi":[{"type":"function","name":"addSpigot","inputs":[{"name":"revenueContract","type":"address","internalType":"address"},{"name":"setting","type":"tuple","internalType":"struct ISpigot.Setting","components":[{"name":"ownerSplit","type":"uint8","internalType":"uint8"},{"name":"claimFunction","type":"bytes4","internalType":"bytes4"},{"name":"transferOwnerFunction","type":"bytes4","internalType":"bytes4"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimAndRepay","inputs":[{"name":"claimToken","type":"address","internalType":"address"},{"name":"zeroExTradeData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimAndTrade","inputs":[{"name":"claimToken","type":"address","internalType":"address"},{"name":"zeroExTradeData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"tokensBought","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"releaseSpigot","inputs":[{"name":"to","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"spigot","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ISpigot"}],"stateMutability":"nonpayable"},{"type":"function","name":"sweep","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"tradeable","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"unused","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateOwnerSplit","inputs":[{"name":"revenueContract","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateWhitelist","inputs":[{"name":"func","type":"bytes4","internalType":"bytes4"},{"name":"allowed","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"useAndRepay","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"ReservesChanged","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"diff","type":"int256","indexed":true,"internalType":"int256"},{"name":"tokenType","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RevenuePayment","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TradeSpigotRevenue","inputs":[{"name":"revenueToken","type":"address","indexed":true,"internalType":"address"},{"name":"revenueTokenAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"debtToken","type":"address","indexed":true,"internalType":"address"},{"name":"debtTokensBought","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ReservesOverdrawn","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amountAvailable","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addSpigot(address,(uint8,bytes4,bytes4))":"18906bf7","claimAndRepay(address,bytes)":"1acb7525","claimAndTrade(address,bytes)":"5f618768","releaseSpigot(address)":"ebb65a0f","spigot()":"5e235d54","sweep(address,address,uint256)":"62c06767","tradeable(address)":"9637b5d3","unused(address)":"461035af","updateOwnerSplit(address)":"b57cb9fc","updateWhitelist(bytes4,bool)":"921c5fcb","useAndRepay(uint256)":"67828fbd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountAvailable\",\"type\":\"uint256\"}],\"name\":\"ReservesOverdrawn\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"diff\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"ReservesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RevenuePayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revenueToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revenueTokenAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"debtTokensBought\",\"type\":\"uint256\"}],\"name\":\"TradeSpigotRevenue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revenueContract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ownerSplit\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"claimFunction\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"transferOwnerFunction\",\"type\":\"bytes4\"}],\"internalType\":\"struct ISpigot.Setting\",\"name\":\"setting\",\"type\":\"tuple\"}],\"name\":\"addSpigot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"zeroExTradeData\",\"type\":\"bytes\"}],\"name\":\"claimAndRepay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"zeroExTradeData\",\"type\":\"bytes\"}],\"name\":\"claimAndTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensBought\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"releaseSpigot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spigot\",\"outputs\":[{\"internalType\":\"contract ISpigot\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sweep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tradeable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revenueContract\",\"type\":\"address\"}],\"name\":\"updateOwnerSplit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"updateWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"useAndRepay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TradeSpigotRevenue(address,uint256,address,uint256)\":{\"details\":\"- Can you use to figure out price of revenue tokens offchain since we only have an oracle for credit tokens- Revenue tokens may be from reserves or from Spigot revenue.\"}},\"kind\":\"dev\",\"methods\":{\"addSpigot(address,(uint8,bytes4,bytes4))\":{\"details\":\"- see Spigot.addSpigot()- callable `arbiter` ONLY\",\"returns\":{\"_0\":\"- if function call was successful\"}},\"claimAndRepay(address,bytes)\":{\"details\":\"- does not trade asset if claimToken = credit.token- callable by `arbiter`\",\"params\":{\"claimToken\":\"- The Revenue Token escrowed by Spigot to claim and use to repay debt\",\"zeroExTradeData\":\"- data generated by the 0x dex API to trade `claimToken` against their exchange contract\"},\"returns\":{\"_0\":\"newTokens       - amount of credit tokens claimed or bought during call\"}},\"claimAndTrade(address,bytes)\":{\"details\":\"- ensures first token in repayment queue is being bought- callable by `arbiter`\",\"params\":{\"claimToken\":\"- The revenue token escrowed in the Spigot to sell in trade\",\"zeroExTradeData\":\"- 0x API data to use in trade to sell `claimToken` for `credits[ids[0]]`\"},\"returns\":{\"tokensBought\":\"  - amount of credit tokens bought\"}},\"releaseSpigot(address)\":{\"details\":\"- callable by borrower + arbiter\",\"params\":{\"to\":\"- address that caller wants to transfer Spigot ownership to\"},\"returns\":{\"_0\":\"bool       - whether or not a Spigot was released\"}},\"sweep(address,address,uint256)\":{\"details\":\"- callable by `borrower` or `arbiter`\",\"params\":{\"amount\":\"- amount of reserve tokens to withdraw/liquidate\",\"to\":\"- address to send swept tokens to\",\"token\":\"- revenue or credit token to sweep\"}},\"tradeable(address)\":{\"params\":{\"token\":\"- address for an ERC20 earned as revenue\"},\"returns\":{\"_0\":\"amount    - amount of unused + claimable revenue tokens available to trade for credit tokens or credit tokens availble to repay debt with\"}},\"unused(address)\":{\"params\":{\"token\":\"- address for an ERC20\"},\"returns\":{\"_0\":\"amount    - amount of revenue tokens available to trade for credit tokens or credit tokens availble to repay debt with\"}},\"updateOwnerSplit(address)\":{\"details\":\"- callable by anyone\",\"params\":{\"revenueContract\":\"- spigot to update\"},\"returns\":{\"_0\":\"didUpdate        - whether or not split was updated\"}},\"updateWhitelist(bytes4,bool)\":{\"details\":\"- see Spigot.updateWhitelistedFunction()- callable `arbiter` ONLY\",\"returns\":{\"_0\":\"- if function call was successful\"}},\"useAndRepay(uint256)\":{\"details\":\"- callable by `borrower` or first lender in repayment queue\",\"params\":{\"amount\":\"- amount of unused tokens to use to repay Lender\"},\"returns\":{\"_0\":\"- if function executed successfully\"}}},\"version\":1},\"userdoc\":{\"events\":{\"RevenuePayment(address,uint256)\":{\"notice\":\"- Log how many revenue tokens are used to repay debt after claimAndRepay         - dont need to track value like other events because _repay already emits that         - Mainly used to log debt that is paid via Spigot directly vs other sources. Without this event it's a lot harder to parse that offchain.\"},\"TradeSpigotRevenue(address,uint256,address,uint256)\":{\"notice\":\"- Log how many revenue tokens were traded for credit tokens.         - Differs from RevenuePayment because we trade revenue at different times from repaying with revenue\"}},\"kind\":\"user\",\"methods\":{\"addSpigot(address,(uint8,bytes4,bytes4))\":{\"notice\":\"- allow Line (aka Owner on Spigot) to add new revenue streams to repay credit\"},\"claimAndRepay(address,bytes)\":{\"notice\":\"- Claims revenue tokens from the Spigot, trades them for credit tokens via a Dex aggregator (Ox protocol) and uses the bought credit tokens to repay debt.          - see SpigotedLine._claimAndTrade and SpigotedLineLib.claimAndTrade for more details on Spigot and trading logic          - see LineOfCredit._repay() for more details on repayment logic\"},\"claimAndTrade(address,bytes)\":{\"notice\":\"- allows borrower to trade revenue to credit tokens at a favorable price without repaying debt         - sends all bought tokens to `unused` to be repaid later         - see SpigotedLine._claimAndTrade and SpigotedLineLib.claimAndTrade for more details\"},\"releaseSpigot(address)\":{\"notice\":\"- Transfers ownership of the entire Spigot from its then Owner to either the Borrower (if a Line of Credit has been been fully repaid)          - or to the Arbiter (if the Line of Credit is liquidatable).\"},\"sweep(address,address,uint256)\":{\"notice\":\"- sends unused tokens to borrower if REPAID or arbiter if LIQUIDATABLE or INSOLVENT           -  does not send tokens out if line is ACTIVE\"},\"tradeable(address)\":{\"notice\":\"- Looksup `unusedTokens` + spigot.getOwnerTokens` for how many tokens arbiter must sell in claimAndTrade/Repay\"},\"unused(address)\":{\"notice\":\"- getter for `unusedTokens` mapping which is a private var\"},\"updateOwnerSplit(address)\":{\"notice\":\"- Changes the revenue split between the Treasury and the Line (Owner) based upon the status of the Line of Credit\"},\"updateWhitelist(bytes4,bool)\":{\"notice\":\"- Sets or resets the whitelisted functions that a Borrower [Operator] is allowed to perform on the revenue generating contracts\"},\"useAndRepay(uint256)\":{\"notice\":\"- Directly repays a Lender using unused tokens already held by Line with no trading\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISpigotedLine.sol\":\"ISpigotedLine\"},\"evmVersion\":\"london\",\"libraries\":{\"contracts/utils/CreditLib.sol:CreditLib\":\"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87\",\"contracts/utils/CreditListLib.sol:CreditListLib\":\"0x9cbe9741b3503a790e69e1587b5d51c0056154dc\",\"contracts/utils/EscrowLib.sol:EscrowLib\":\"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2\",\"contracts/utils/LineFactoryLib.sol:LineFactoryLib\":\"0x2b721a999b83cbcc1dbd697a27199d5b4be70102\",\"contracts/utils/LineLib.sol:LineLib\":\"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812\",\"contracts/utils/SpigotedLineLib.sol:SpigotedLineLib\":\"0x274946031d204567281f7616718b4abb940ef784\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/contracts/src/v0.8/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/interfaces/ISpigot.sol\":{\"keccak256\":\"0x357283b06960223a6518ccadf0e7cbdcee0783a51a9bf82efb003b628f21b366\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4a8f6a46431d9c81884992ed978e87b276d55bb84c233af4c288e2d76173c9\",\"dweb:/ipfs/QmW8BZqJ1qx4u6ApGcsDcPqECWRqhbvJCRenCpUXuKn1xb\"]},\"contracts/interfaces/ISpigotedLine.sol\":{\"keccak256\":\"0x0c28a5c2c96be674ebfa56f1e07fb017b64461cf10b158dbd98ecec6e604c8e6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4edf92e1d1a43e235b7f92b238774a0cd5fb33d70a46b362712684743f6d097a\",\"dweb:/ipfs/QmU8C3JZFCp7cxX8WCS8NGLrnaRZZFt2YKpcL69Z5Q58rn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountAvailable","type":"uint256"}],"type":"error","name":"ReservesOverdrawn"},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"int256","name":"diff","type":"int256","indexed":true},{"internalType":"uint256","name":"tokenType","type":"uint256","indexed":false}],"type":"event","name":"ReservesChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"RevenuePayment","anonymous":false},{"inputs":[{"internalType":"address","name":"revenueToken","type":"address","indexed":true},{"internalType":"uint256","name":"revenueTokenAmount","type":"uint256","indexed":false},{"internalType":"address","name":"debtToken","type":"address","indexed":true},{"internalType":"uint256","name":"debtTokensBought","type":"uint256","indexed":true}],"type":"event","name":"TradeSpigotRevenue","anonymous":false},{"inputs":[{"internalType":"address","name":"revenueContract","type":"address"},{"internalType":"struct ISpigot.Setting","name":"setting","type":"tuple","components":[{"internalType":"uint8","name":"ownerSplit","type":"uint8"},{"internalType":"bytes4","name":"claimFunction","type":"bytes4"},{"internalType":"bytes4","name":"transferOwnerFunction","type":"bytes4"}]}],"stateMutability":"nonpayable","type":"function","name":"addSpigot","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"claimToken","type":"address"},{"internalType":"bytes","name":"zeroExTradeData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"claimAndRepay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"claimToken","type":"address"},{"internalType":"bytes","name":"zeroExTradeData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"claimAndTrade","outputs":[{"internalType":"uint256","name":"tokensBought","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"releaseSpigot","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"spigot","outputs":[{"internalType":"contract ISpigot","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sweep","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"tradeable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unused","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"revenueContract","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateOwnerSplit","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes4","name":"func","type":"bytes4"},{"internalType":"bool","name":"allowed","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"updateWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"useAndRepay","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"addSpigot(address,(uint8,bytes4,bytes4))":{"details":"- see Spigot.addSpigot()- callable `arbiter` ONLY","returns":{"_0":"- if function call was successful"}},"claimAndRepay(address,bytes)":{"details":"- does not trade asset if claimToken = credit.token- callable by `arbiter`","params":{"claimToken":"- The Revenue Token escrowed by Spigot to claim and use to repay debt","zeroExTradeData":"- data generated by the 0x dex API to trade `claimToken` against their exchange contract"},"returns":{"_0":"newTokens       - amount of credit tokens claimed or bought during call"}},"claimAndTrade(address,bytes)":{"details":"- ensures first token in repayment queue is being bought- callable by `arbiter`","params":{"claimToken":"- The revenue token escrowed in the Spigot to sell in trade","zeroExTradeData":"- 0x API data to use in trade to sell `claimToken` for `credits[ids[0]]`"},"returns":{"tokensBought":"  - amount of credit tokens bought"}},"releaseSpigot(address)":{"details":"- callable by borrower + arbiter","params":{"to":"- address that caller wants to transfer Spigot ownership to"},"returns":{"_0":"bool       - whether or not a Spigot was released"}},"sweep(address,address,uint256)":{"details":"- callable by `borrower` or `arbiter`","params":{"amount":"- amount of reserve tokens to withdraw/liquidate","to":"- address to send swept tokens to","token":"- revenue or credit token to sweep"}},"tradeable(address)":{"params":{"token":"- address for an ERC20 earned as revenue"},"returns":{"_0":"amount    - amount of unused + claimable revenue tokens available to trade for credit tokens or credit tokens availble to repay debt with"}},"unused(address)":{"params":{"token":"- address for an ERC20"},"returns":{"_0":"amount    - amount of revenue tokens available to trade for credit tokens or credit tokens availble to repay debt with"}},"updateOwnerSplit(address)":{"details":"- callable by anyone","params":{"revenueContract":"- spigot to update"},"returns":{"_0":"didUpdate        - whether or not split was updated"}},"updateWhitelist(bytes4,bool)":{"details":"- see Spigot.updateWhitelistedFunction()- callable `arbiter` ONLY","returns":{"_0":"- if function call was successful"}},"useAndRepay(uint256)":{"details":"- callable by `borrower` or first lender in repayment queue","params":{"amount":"- amount of unused tokens to use to repay Lender"},"returns":{"_0":"- if function executed successfully"}}},"version":1},"userdoc":{"kind":"user","methods":{"addSpigot(address,(uint8,bytes4,bytes4))":{"notice":"- allow Line (aka Owner on Spigot) to add new revenue streams to repay credit"},"claimAndRepay(address,bytes)":{"notice":"- Claims revenue tokens from the Spigot, trades them for credit tokens via a Dex aggregator (Ox protocol) and uses the bought credit tokens to repay debt.          - see SpigotedLine._claimAndTrade and SpigotedLineLib.claimAndTrade for more details on Spigot and trading logic          - see LineOfCredit._repay() for more details on repayment logic"},"claimAndTrade(address,bytes)":{"notice":"- allows borrower to trade revenue to credit tokens at a favorable price without repaying debt         - sends all bought tokens to `unused` to be repaid later         - see SpigotedLine._claimAndTrade and SpigotedLineLib.claimAndTrade for more details"},"releaseSpigot(address)":{"notice":"- Transfers ownership of the entire Spigot from its then Owner to either the Borrower (if a Line of Credit has been been fully repaid)          - or to the Arbiter (if the Line of Credit is liquidatable)."},"sweep(address,address,uint256)":{"notice":"- sends unused tokens to borrower if REPAID or arbiter if LIQUIDATABLE or INSOLVENT           -  does not send tokens out if line is ACTIVE"},"tradeable(address)":{"notice":"- Looksup `unusedTokens` + spigot.getOwnerTokens` for how many tokens arbiter must sell in claimAndTrade/Repay"},"unused(address)":{"notice":"- getter for `unusedTokens` mapping which is a private var"},"updateOwnerSplit(address)":{"notice":"- Changes the revenue split between the Treasury and the Line (Owner) based upon the status of the Line of Credit"},"updateWhitelist(bytes4,bool)":{"notice":"- Sets or resets the whitelisted functions that a Borrower [Operator] is allowed to perform on the revenue generating contracts"},"useAndRepay(uint256)":{"notice":"- Directly repays a Lender using unused tokens already held by Line with no trading"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/contracts/src/v0.8/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/ISpigotedLine.sol":"ISpigotedLine"},"evmVersion":"london","libraries":{"contracts/utils/CreditLib.sol:CreditLib":"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87","contracts/utils/CreditListLib.sol:CreditListLib":"0x9cbe9741b3503a790e69e1587b5d51c0056154dc","contracts/utils/EscrowLib.sol:EscrowLib":"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2","contracts/utils/LineFactoryLib.sol:LineFactoryLib":"0x2b721a999b83cbcc1dbd697a27199d5b4be70102","contracts/utils/LineLib.sol:LineLib":"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812","contracts/utils/SpigotedLineLib.sol:SpigotedLineLib":"0x274946031d204567281f7616718b4abb940ef784"}},"sources":{"contracts/interfaces/ISpigot.sol":{"keccak256":"0x357283b06960223a6518ccadf0e7cbdcee0783a51a9bf82efb003b628f21b366","urls":["bzz-raw://9d4a8f6a46431d9c81884992ed978e87b276d55bb84c233af4c288e2d76173c9","dweb:/ipfs/QmW8BZqJ1qx4u6ApGcsDcPqECWRqhbvJCRenCpUXuKn1xb"],"license":"GPL-3.0"},"contracts/interfaces/ISpigotedLine.sol":{"keccak256":"0x0c28a5c2c96be674ebfa56f1e07fb017b64461cf10b158dbd98ecec6e604c8e6","urls":["bzz-raw://4edf92e1d1a43e235b7f92b238774a0cd5fb33d70a46b362712684743f6d097a","dweb:/ipfs/QmU8C3JZFCp7cxX8WCS8NGLrnaRZZFt2YKpcL69Z5Q58rn"],"license":"GPL-3.0"}},"version":1},"ast":{"absolutePath":"contracts/interfaces/ISpigotedLine.sol","id":1134,"exportedSymbols":{"ISpigot":[997],"ISpigotedLine":[1133]},"nodeType":"SourceUnit","src":"130:6520:9","nodes":[{"id":999,"nodeType":"PragmaDirective","src":"130:24:9","nodes":[],"literals":["solidity","^","0.8",".16"]},{"id":1001,"nodeType":"ImportDirective","src":"156:38:9","nodes":[],"absolutePath":"contracts/interfaces/ISpigot.sol","file":"./ISpigot.sol","nameLocation":"-1:-1:-1","scope":1134,"sourceUnit":998,"symbolAliases":[{"foreign":{"id":1000,"name":"ISpigot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"164:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1133,"nodeType":"ContractDefinition","src":"196:6453:9","nodes":[{"id":1008,"nodeType":"EventDefinition","src":"577:68:9","nodes":[],"anonymous":false,"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"226:346:9","text":" @notice - Log how many revenue tokens are used to repay debt after claimAndRepay\n         - dont need to track value like other events because _repay already emits that\n         - Mainly used to log debt that is paid via Spigot directly vs other sources. Without this event it's a lot harder to parse that offchain."},"eventSelector":"8343d4254deba24e9e0e659e47f973c9705b70baa52a884516698b13af1588bb","name":"RevenuePayment","nameLocation":"583:14:9","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"614:5:9","nodeType":"VariableDeclaration","scope":1008,"src":"598:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"598:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"637:6:9","nodeType":"VariableDeclaration","scope":1008,"src":"621:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:47:9"}},{"id":1014,"nodeType":"ErrorDefinition","src":"651:64:9","nodes":[],"errorSelector":"017a99e4","name":"ReservesOverdrawn","nameLocation":"657:17:9","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"token","nameLocation":"683:5:9","nodeType":"VariableDeclaration","scope":1014,"src":"675:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"amountAvailable","nameLocation":"698:15:9","nodeType":"VariableDeclaration","scope":1014,"src":"690:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:40:9"}},{"id":1025,"nodeType":"EventDefinition","src":"1129:182:9","nodes":[],"anonymous":false,"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"721:403:9","text":" @notice - Log how many revenue tokens were traded for credit tokens.\n         - Differs from RevenuePayment because we trade revenue at different times from repaying with revenue\n @dev    - Can you use to figure out price of revenue tokens offchain since we only have an oracle for credit tokens\n @dev    - Revenue tokens may be from reserves or from Spigot revenue."},"eventSelector":"9c7e3719be13960547a8b4b08bb9a149591882ce5bdd3f07331d27590ab41e61","name":"TradeSpigotRevenue","nameLocation":"1135:18:9","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"indexed":true,"mutability":"mutable","name":"revenueToken","nameLocation":"1179:12:9","nodeType":"VariableDeclaration","scope":1025,"src":"1163:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"indexed":false,"mutability":"mutable","name":"revenueTokenAmount","nameLocation":"1209:18:9","nodeType":"VariableDeclaration","scope":1025,"src":"1201:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"indexed":true,"mutability":"mutable","name":"debtToken","nameLocation":"1253:9:9","nodeType":"VariableDeclaration","scope":1025,"src":"1237:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"indexed":true,"mutability":"mutable","name":"debtTokensBought","nameLocation":"1288:16:9","nodeType":"VariableDeclaration","scope":1025,"src":"1272:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1153:157:9"}},{"id":1033,"nodeType":"EventDefinition","src":"1317:158:9","nodes":[],"anonymous":false,"eventSelector":"7dcdf49c7e92795e08b749f8dd551c92f7be794148ac2f9db089e2e67cbdd519","name":"ReservesChanged","nameLocation":"1323:15:9","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1364:5:9","nodeType":"VariableDeclaration","scope":1033,"src":"1348:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"1348:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"indexed":true,"mutability":"mutable","name":"diff","nameLocation":"1394:4:9","nodeType":"VariableDeclaration","scope":1033,"src":"1379:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1028,"name":"int256","nodeType":"ElementaryTypeName","src":"1379:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1031,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"1416:9:9","nodeType":"VariableDeclaration","scope":1033,"src":"1408:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1338:136:9"}},{"id":1041,"nodeType":"FunctionDefinition","src":"1837:61:9","nodes":[],"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"1508:324:9","text":" @notice - Directly repays a Lender using unused tokens already held by Line with no trading\n @dev    - callable by `borrower` or first lender in repayment queue\n @param amount       - amount of unused tokens to use to repay Lender\n @return             - if function executed successfully"},"functionSelector":"67828fbd","implemented":false,"kind":"function","modifiers":[],"name":"useAndRepay","nameLocation":"1846:11:9","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"amount","nameLocation":"1866:6:9","nodeType":"VariableDeclaration","scope":1041,"src":"1858:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1858:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1857:16:9"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1041,"src":"1892:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1038,"name":"bool","nodeType":"ElementaryTypeName","src":"1892:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1891:6:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1051,"nodeType":"FunctionDefinition","src":"2716:102:9","nodes":[],"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"1904:807:9","text":" @notice  - Claims revenue tokens from the Spigot, trades them for credit tokens via a Dex aggregator (Ox protocol) and uses the bought credit tokens to repay debt.\n          - see SpigotedLine._claimAndTrade and SpigotedLineLib.claimAndTrade for more details on Spigot and trading logic\n          - see LineOfCredit._repay() for more details on repayment logic\n @dev     - does not trade asset if claimToken = credit.token\n @dev     - callable by `arbiter`\n @param claimToken       - The Revenue Token escrowed by Spigot to claim and use to repay debt\n @param zeroExTradeData  - data generated by the 0x dex API to trade `claimToken` against their exchange contract\n @return newTokens       - amount of credit tokens claimed or bought during call"},"functionSelector":"1acb7525","implemented":false,"kind":"function","modifiers":[],"name":"claimAndRepay","nameLocation":"2725:13:9","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"claimToken","nameLocation":"2747:10:9","nodeType":"VariableDeclaration","scope":1051,"src":"2739:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"zeroExTradeData","nameLocation":"2774:15:9","nodeType":"VariableDeclaration","scope":1051,"src":"2759:30:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1045,"name":"bytes","nodeType":"ElementaryTypeName","src":"2759:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2738:52:9"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"2809:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2808:9:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1061,"nodeType":"FunctionDefinition","src":"3496:115:9","nodes":[],"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"2824:667:9","text":" @notice - allows borrower to trade revenue to credit tokens at a favorable price without repaying debt\n         - sends all bought tokens to `unused` to be repaid later\n         - see SpigotedLine._claimAndTrade and SpigotedLineLib.claimAndTrade for more details\n @dev    - ensures first token in repayment queue is being bought\n @dev    - callable by `arbiter`\n @param claimToken      - The revenue token escrowed in the Spigot to sell in trade\n @param zeroExTradeData - 0x API data to use in trade to sell `claimToken` for `credits[ids[0]]`\n @return tokensBought   - amount of credit tokens bought"},"functionSelector":"5f618768","implemented":false,"kind":"function","modifiers":[],"name":"claimAndTrade","nameLocation":"3505:13:9","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"claimToken","nameLocation":"3527:10:9","nodeType":"VariableDeclaration","scope":1061,"src":"3519:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"3519:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"zeroExTradeData","nameLocation":"3554:15:9","nodeType":"VariableDeclaration","scope":1061,"src":"3539:30:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"3539:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3518:52:9"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"tokensBought","nameLocation":"3597:12:9","nodeType":"VariableDeclaration","scope":1061,"src":"3589:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3589:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3588:22:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1072,"nodeType":"FunctionDefinition","src":"3903:102:9","nodes":[],"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"3653:245:9","text":" @notice - allow Line (aka Owner on Spigot) to add new revenue streams to repay credit\n @dev    - see Spigot.addSpigot()\n @dev    - callable `arbiter` ONLY\n @return            - if function call was successful"},"functionSelector":"18906bf7","implemented":false,"kind":"function","modifiers":[],"name":"addSpigot","nameLocation":"3912:9:9","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"revenueContract","nameLocation":"3930:15:9","nodeType":"VariableDeclaration","scope":1072,"src":"3922:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"3922:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"setting","nameLocation":"3972:7:9","nodeType":"VariableDeclaration","scope":1072,"src":"3947:32:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Setting_$789_calldata_ptr","typeString":"struct ISpigot.Setting"},"typeName":{"id":1066,"nodeType":"UserDefinedTypeName","pathNode":{"id":1065,"name":"ISpigot.Setting","nameLocations":["3947:7:9","3955:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":789,"src":"3947:15:9"},"referencedDeclaration":789,"src":"3947:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Setting_$789_storage_ptr","typeString":"struct ISpigot.Setting"}},"visibility":"internal"}],"src":"3921:59:9"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"3999:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1069,"name":"bool","nodeType":"ElementaryTypeName","src":"3999:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3998:6:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1082,"nodeType":"FunctionDefinition","src":"4326:76:9","nodes":[],"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"4011:310:9","text":" @notice - Sets or resets the whitelisted functions that a Borrower [Operator] is allowed to perform on the revenue generating contracts\n @dev    - see Spigot.updateWhitelistedFunction()\n @dev    - callable `arbiter` ONLY\n @return           - if function call was successful"},"functionSelector":"921c5fcb","implemented":false,"kind":"function","modifiers":[],"name":"updateWhitelist","nameLocation":"4335:15:9","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"func","nameLocation":"4358:4:9","nodeType":"VariableDeclaration","scope":1082,"src":"4351:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1074,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4351:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"allowed","nameLocation":"4369:7:9","nodeType":"VariableDeclaration","scope":1082,"src":"4364:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1076,"name":"bool","nodeType":"ElementaryTypeName","src":"4364:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4350:27:9"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"4396:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"4396:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4395:6:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1090,"nodeType":"FunctionDefinition","src":"4707:75:9","nodes":[],"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"4408:294:9","text":" @notice - Changes the revenue split between the Treasury and the Line (Owner) based upon the status of the Line of Credit\n @dev    - callable by anyone\n @param revenueContract   - spigot to update\n @return didUpdate        - whether or not split was updated"},"functionSelector":"b57cb9fc","implemented":false,"kind":"function","modifiers":[],"name":"updateOwnerSplit","nameLocation":"4716:16:9","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"revenueContract","nameLocation":"4741:15:9","nodeType":"VariableDeclaration","scope":1090,"src":"4733:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"4733:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4732:25:9"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"4776:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1087,"name":"bool","nodeType":"ElementaryTypeName","src":"4776:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4775:6:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1098,"nodeType":"FunctionDefinition","src":"5232:59:9","nodes":[],"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"4788:439:9","text":" @notice  - Transfers ownership of the entire Spigot from its then Owner to either the Borrower (if a Line of Credit has been been fully repaid)\n          - or to the Arbiter (if the Line of Credit is liquidatable).\n @dev     - callable by borrower + arbiter\n @param to          - address that caller wants to transfer Spigot ownership to\n @return bool       - whether or not a Spigot was released"},"functionSelector":"ebb65a0f","implemented":false,"kind":"function","modifiers":[],"name":"releaseSpigot","nameLocation":"5241:13:9","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"5263:2:9","nodeType":"VariableDeclaration","scope":1098,"src":"5255:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"5255:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5254:12:9"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"5285:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1095,"name":"bool","nodeType":"ElementaryTypeName","src":"5285:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5284:6:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1110,"nodeType":"FunctionDefinition","src":"5731:85:9","nodes":[],"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"5297:429:9","text":" @notice   - sends unused tokens to borrower if REPAID or arbiter if LIQUIDATABLE or INSOLVENT\n           -  does not send tokens out if line is ACTIVE\n @dev      - callable by `borrower` or `arbiter`\n @param to           - address to send swept tokens to\n @param token        - revenue or credit token to sweep\n @param amount       - amount of reserve tokens to withdraw/liquidate"},"functionSelector":"62c06767","implemented":false,"kind":"function","modifiers":[],"name":"sweep","nameLocation":"5740:5:9","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"to","nameLocation":"5754:2:9","nodeType":"VariableDeclaration","scope":1110,"src":"5746:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"5746:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"token","nameLocation":"5766:5:9","nodeType":"VariableDeclaration","scope":1110,"src":"5758:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"5758:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"amount","nameLocation":"5781:6:9","nodeType":"VariableDeclaration","scope":1110,"src":"5773:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5773:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5745:43:9"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"5807:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5807:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5806:9:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1118,"nodeType":"FunctionDefinition","src":"6110:58:9","nodes":[],"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"5838:267:9","text":" @notice - getter for `unusedTokens` mapping which is a private var\n @param token      - address for an ERC20\n @return amount    - amount of revenue tokens available to trade for credit tokens or credit tokens availble to repay debt with"},"functionSelector":"461035af","implemented":false,"kind":"function","modifiers":[],"name":"unused","nameLocation":"6119:6:9","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"token","nameLocation":"6134:5:9","nodeType":"VariableDeclaration","scope":1118,"src":"6126:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"6126:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6125:15:9"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"6159:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"6159:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6158:9:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1126,"nodeType":"FunctionDefinition","src":"6535:61:9","nodes":[],"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"6174:356:9","text":" @notice - Looksup `unusedTokens` + spigot.getOwnerTokens` for how many tokens arbiter must sell in claimAndTrade/Repay\n @param token      - address for an ERC20 earned as revenue\n @return amount    - amount of unused + claimable revenue tokens available to trade for credit tokens or credit tokens availble to repay debt with"},"functionSelector":"9637b5d3","implemented":false,"kind":"function","modifiers":[],"name":"tradeable","nameLocation":"6544:9:9","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"token","nameLocation":"6562:5:9","nodeType":"VariableDeclaration","scope":1126,"src":"6554:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"6554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6553:15:9"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"6587:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"6587:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6586:9:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1132,"nodeType":"FunctionDefinition","src":"6602:45:9","nodes":[],"functionSelector":"5e235d54","implemented":false,"kind":"function","modifiers":[],"name":"spigot","nameLocation":"6611:6:9","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"6617:2:9"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"6638:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISpigot_$997","typeString":"contract ISpigot"},"typeName":{"id":1129,"nodeType":"UserDefinedTypeName","pathNode":{"id":1128,"name":"ISpigot","nameLocations":["6638:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"6638:7:9"},"referencedDeclaration":997,"src":"6638:7:9","typeDescriptions":{"typeIdentifier":"t_contract$_ISpigot_$997","typeString":"contract ISpigot"}},"visibility":"internal"}],"src":"6637:9:9"},"scope":1133,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISpigotedLine","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[1133],"name":"ISpigotedLine","nameLocation":"206:13:9","scope":1134,"usedErrors":[1014],"usedEvents":[1008,1025,1033]}],"license":"GPL-3.0"},"id":9}