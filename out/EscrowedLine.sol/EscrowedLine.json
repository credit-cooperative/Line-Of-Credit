{"abi":[{"type":"function","name":"accrueInterest","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addCredit","inputs":[{"name":"drate","type":"uint128","internalType":"uint128"},{"name":"frate","type":"uint128","internalType":"uint128"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"lender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"arbiter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"available","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"borrow","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"borrower","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"close","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"counts","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"declareInsolvent","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"depositAndClose","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"depositAndRepay","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"escrow","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEscrow"}],"stateMutability":"view"},{"type":"function","name":"healthcheck","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"enum LineLib.STATUS"}],"stateMutability":"nonpayable"},{"type":"function","name":"increaseCredit","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"init","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"interestAccrued","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"liquidate","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"targetToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"nextInQ","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint128","internalType":"uint128"},{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"oracle","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IOracle"}],"stateMutability":"nonpayable"},{"type":"function","name":"setRates","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"drate","type":"uint128","internalType":"uint128"},{"name":"frate","type":"uint128","internalType":"uint128"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"status","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"enum LineLib.STATUS"}],"stateMutability":"nonpayable"},{"type":"function","name":"stepQ","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOutstandingDebt","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddCredit","inputs":[{"name":"lender","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"deposit","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"id","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"Borrow","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"CloseCreditPosition","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"Default","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"DeployLine","inputs":[{"name":"oracle","type":"address","indexed":true,"internalType":"address"},{"name":"arbiter","type":"address","indexed":true,"internalType":"address"},{"name":"borrower","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"IncreaseCredit","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"deposit","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"InterestAccrued","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Liquidate","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"escrow","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RepayInterest","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RepayPrincipal","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SetRates","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"dRate","type":"uint128","indexed":true,"internalType":"uint128"},{"name":"fRate","type":"uint128","indexed":true,"internalType":"uint128"}],"anonymous":false},{"type":"event","name":"SortedIntoQ","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newIdx","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"oldIdx","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"oldId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"UpdateStatus","inputs":[{"name":"status","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"WithdrawDeposit","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"WithdrawProfit","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AlreadyInitialized","inputs":[]},{"type":"error","name":"BadModule","inputs":[{"name":"module","type":"address","internalType":"address"}]},{"type":"error","name":"BorrowFailed","inputs":[]},{"type":"error","name":"CallerAccessDenied","inputs":[]},{"type":"error","name":"CantStepQ","inputs":[]},{"type":"error","name":"CloseFailedWithPrincipal","inputs":[]},{"type":"error","name":"EthSupportDisabled","inputs":[]},{"type":"error","name":"NoLiquidity","inputs":[]},{"type":"error","name":"NoTokenPrice","inputs":[]},{"type":"error","name":"NotActive","inputs":[]},{"type":"error","name":"NotBorrowing","inputs":[]},{"type":"error","name":"NotInsolvent","inputs":[{"name":"module","type":"address","internalType":"address"}]},{"type":"error","name":"NotLiquidatable","inputs":[]},{"type":"error","name":"PositionExists","inputs":[]},{"type":"error","name":"PositionIsClosed","inputs":[]},{"type":"error","name":"RepayAmountExceedsDebt","inputs":[{"name":"totalAvailable","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"TokenTransferFailed","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accrueInterest()":"a6afed95","addCredit(uint128,uint128,uint256,address,address)":"cb836209","arbiter()":"fe25e00a","available(bytes32)":"6932854f","borrow(bytes32,uint256)":"7c93ec30","borrower()":"7df1f1b9","close(bytes32)":"39c79e0c","counts()":"817cc1ea","declareInsolvent()":"feccf26f","depositAndClose()":"7eef544d","depositAndRepay(uint256)":"dfe96083","escrow()":"e2fdcc17","healthcheck()":"4f42fc02","increaseCredit(bytes32,uint256)":"c3651574","init()":"e1c7392a","interestAccrued(bytes32)":"7df33c20","liquidate(uint256,address)":"5fae8b3d","nextInQ()":"e701af99","oracle()":"7dc0d1d0","setRates(bytes32,uint128,uint128)":"ac856fac","status()":"200d2ed2","stepQ()":"62bfcc68","updateOutstandingDebt()":"501b56d8","withdraw(bytes32,uint256)":"040cf020"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"BadModule\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerAccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantStepQ\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CloseFailedWithPrincipal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EthSupportDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTokenPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBorrowing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"NotInsolvent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotLiquidatable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PositionIsClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAvailable\",\"type\":\"uint256\"}],\"name\":\"RepayAmountExceedsDebt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AddCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"CloseCreditPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"Default\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"arbiter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"DeployLine\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"IncreaseCredit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InterestAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RepayInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RepayPrincipal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"dRate\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"fRate\",\"type\":\"uint128\"}],\"name\":\"SetRates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldIdx\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldId\",\"type\":\"bytes32\"}],\"name\":\"SortedIntoQ\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"UpdateStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawProfit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"drate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"frate\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"addCredit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbiter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"declareInsolvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositAndClose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositAndRepay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrow\",\"outputs\":[{\"internalType\":\"contract IEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"healthcheck\",\"outputs\":[{\"internalType\":\"enum LineLib.STATUS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseCredit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"interestAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextInQ\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"drate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"frate\",\"type\":\"uint128\"}],\"name\":\"setRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum LineLib.STATUS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stepQ\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateOutstandingDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accrueInterest()\":{\"details\":\"- Loops over all position ids and calls related internal functions during which InterestRateCredit.sol           is called with the id data and then 'interestAccrued' is updated.- The related internal function _accrue() is called by other functions any time the balance on an individual           credit line changes or if the interest rates of a credit line are changed by mutual consent           between a Borrower and a Lender.\"},\"addCredit(uint128,uint128,uint256,address,address)\":{\"details\":\"- Requires mutualConsent participants send EXACT same params when calling addCredit- Fully executes function after a Borrower and a Lender have agreed terms, both Lender and borrower have agreed through mutualConsent- callable by `lender` and `borrower`\",\"params\":{\"amount\":\"- The amount of Credit Token to initially deposit by the Lender\",\"drate\":\"- The interest rate charged to a Borrower on borrowed / drawn down funds. In bps, 4 decimals.\",\"frate\":\"- The interest rate charged to a Borrower on the remaining funds available, but not yet drawn down (rate charged on the available headroom). In bps, 4 decimals.\",\"lender\":\"- The address that will manage credit line\",\"token\":\"- The Credit Token, i.e. the token to be lent out\"},\"returns\":{\"_0\":\"id     - Lender's position id to look up in `credits`\"}},\"available(bytes32)\":{\"returns\":{\"_0\":\"- (uint256, uint256) - remaining deposit, claimable interest\"}},\"borrow(bytes32,uint256)\":{\"details\":\"- callable by borrower\",\"params\":{\"amount\":\"- amount of tokens the borrower wants to withdraw\",\"id\":\"- the position to draw down on\"}},\"close(bytes32)\":{\"details\":\"- MUST repay accrued interest from facility fee during call- callable by `borrower` or Lender- The function retains the `payable` designation, despite reverting with a non-zero msg.value, as a gas-optimization\",\"params\":{\"id\":\"-the position id to be closed\"}},\"counts()\":{\"returns\":{\"_0\":\"- (uint256, uint256) - active credit lines, total length\"}},\"declareInsolvent()\":{\"details\":\"- Needed for onchain impairment accounting e.g. updating ERC4626 share price         - MUST NOT have collateral left for call to succeed. Any collateral must already have been liquidated.- Callable only by Arbiter.\"},\"depositAndClose()\":{\"details\":\"- callable by borrower- The function retains the `payable` designation, despite reverting with a non-zero msg.value, as a gas-optimization\"},\"depositAndRepay(uint256)\":{\"details\":\"- Available for anyone to deposit Credit Tokens to be available to be withdrawn by Lenders- The function retains the `payable` designation, despite reverting with a non-zero msg.value, as a gas-optimization\",\"params\":{\"amount\":\"- amount of `token` in `id` to pay back\"}},\"increaseCredit(bytes32,uint256)\":{\"details\":\"- line status must be ACTIVE- callable by borrower- The function retains the `payable` designation, despite not accepting Eth via mutualConsent modifier, as a gas-optimization\",\"params\":{\"amount\":\"- amount to deposit by the Lender\",\"id\":\"- position id that we are updating\"}},\"init()\":{\"details\":\"- Reverts on failure to update status\"},\"interestAccrued(bytes32)\":{\"returns\":{\"_0\":\"- (uint256, uint256) - active credit lines, total length\"}},\"liquidate(uint256,address)\":{\"details\":\"- only callable by Arbiter- Line status MUST be LIQUIDATABLE- callable by `arbiter`\",\"params\":{\"amount\":\"- amount of `targetToken` expected to be sold off in  _liquidate\",\"targetToken\":\"- token in escrow that will be sold of to repay position\"}},\"nextInQ()\":{\"returns\":{\"_0\":\"- (bytes32, address, address, uint, uint) - id, lender, token, principal, interestAccrued\"}},\"setRates(bytes32,uint128,uint128)\":{\"details\":\"- callable by Borrower or Lender\",\"params\":{\"drate\":\"- new drawn rate. In bps, 4 decimals\",\"frate\":\"- new facility rate. In bps, 4 decimals\",\"id\":\"- position id that we are updating\"}},\"stepQ()\":{\"details\":\"- Only works if the first element in the queue is null\"},\"updateOutstandingDebt()\":{\"details\":\"- Denominated in USD, 8 decimals.- callable by anyone\",\"returns\":{\"_0\":\"totalPrincipal - total amount of principal, in USD, owed across all positions\",\"_1\":\"totalInterest - total amount of interest, in USD,  owed across all positions\"}},\"withdraw(bytes32,uint256)\":{\"details\":\"- can only withdraw tokens from their own position. If multiple lenders lend DAI, the lender1 can't withdraw using lender2's tokens- callable by Lender on `id`\",\"params\":{\"amount\":\"- amount of tokens the Lender would like to withdraw (withdrawn amount may be lower)\",\"id\":\"- the position id that Lender is withdrawing from\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueInterest()\":{\"notice\":\"- Updates accrued interest for the whole Line of Credit facility (i.e. for all credit lines)\"},\"addCredit(uint128,uint128,uint256,address,address)\":{\"notice\":\"- On first call, creates proposed terms and emits MutualConsentRegistsered event. No position is created. - On second call, creates position and stores in Line contract, sets interest rates, and starts accruing facility rate fees.\"},\"available(bytes32)\":{\"notice\":\"- how many tokens can be withdrawn from positions by borrower or lender\"},\"borrow(bytes32,uint256)\":{\"notice\":\"- Borrower chooses which lender position draw down on and transfers tokens from Line contract to Borrower\"},\"close(bytes32)\":{\"notice\":\"- Removes and deletes a position, preventing any more borrowing or interest.         - Requires that the position principal has already been repais in full\"},\"counts()\":{\"notice\":\"- getter for amount of active ids + total ids in list\"},\"declareInsolvent()\":{\"notice\":\"- Allow the Arbiter to signify that the Borrower is incapable of repaying debt permanently.         - Recoverable funds for Lender after declaring insolvency = deposit + interestRepaid - principal\"},\"depositAndClose()\":{\"notice\":\"- A Borrower deposits enough tokens to repay and close a credit line.\"},\"depositAndRepay(uint256)\":{\"notice\":\"- Transfers token used in position id from msg.sender to Line contract.- see LineOfCredit._repay() for more details\"},\"escrow()\":{\"notice\":\"the escrow contract backing this Line\"},\"increaseCredit(bytes32,uint256)\":{\"notice\":\"- Lets a Lender and a Borrower increase the credit limit on a position\"},\"init()\":{\"notice\":\"- Runs logic to ensure Line owns all modules are configured properly - collateral, interest rates, arbiter, etc.          - Changes `status` from UNINITIALIZED to ACTIVE\"},\"interestAccrued(bytes32)\":{\"notice\":\"- getter for amount of active ids + total ids in list\"},\"liquidate(uint256,address)\":{\"notice\":\"- Forcefully take collateral from Escrow and repay debt for lender          - current implementation just sends \\\"liquidated\\\" tokens to Arbiter to sell off how the deem fit and then manually repay with DepositAndRepay\"},\"nextInQ()\":{\"notice\":\"- info on the next lender position that must be repaid\"},\"setRates(bytes32,uint128,uint128)\":{\"notice\":\"- lets Lender and Borrower update rates on the lender's position                   - accrues interest before updating terms, per InterestRate docs                   - can do so even when LIQUIDATABLE for the purpose of refinancing and/or renego\"},\"stepQ()\":{\"notice\":\"- Cycles through position ids andselects first position with non-null principal to the zero index\"},\"updateOutstandingDebt()\":{\"notice\":\"- Returns the total debt of a Borrower across all positions for all Lenders.\"},\"withdraw(bytes32,uint256)\":{\"notice\":\"- Withdraws liquidity from a Lender's position available to the Borrower.         - Lender is only allowed to withdraw tokens not already lent out         - Withdraws from repaid interest (profit) first and then deposit is reduced\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/credit/EscrowedLine.sol\":\"EscrowedLine\"},\"evmVersion\":\"london\",\"libraries\":{\"contracts/utils/CreditLib.sol:CreditLib\":\"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87\",\"contracts/utils/CreditListLib.sol:CreditListLib\":\"0x9cbe9741b3503a790e69e1587b5d51c0056154dc\",\"contracts/utils/EscrowLib.sol:EscrowLib\":\"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2\",\"contracts/utils/LineFactoryLib.sol:LineFactoryLib\":\"0x2b721a999b83cbcc1dbd697a27199d5b4be70102\",\"contracts/utils/LineLib.sol:LineLib\":\"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812\",\"contracts/utils/SpigotedLineLib.sol:SpigotedLineLib\":\"0x274946031d204567281f7616718b4abb940ef784\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/contracts/src/v0.8/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/interfaces/IEscrow.sol\":{\"keccak256\":\"0x9e7a6075ca4cd807aa79a7ea99db3edce491906f4ce030d3c9301d44bf0427e8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c63714477a2cbf16bf1c6855decd4b9dfce1fdee16023b6a1cf42e40f72bb7ef\",\"dweb:/ipfs/QmNhVkdYdKY75RJUkRfKVA3mwBeQ4mu4REyggBfB6Z3MwA\"]},\"contracts/interfaces/IEscrowedLine.sol\":{\"keccak256\":\"0x18332c10988277602a59c2bade83010367bbca5c83ab3886c6fdfdb60e1594fa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c8a5923cb23a0a2030bd71af6ce6808aedb24627172d61715695f856399a9a3\",\"dweb:/ipfs/QmdmbdaXJe7MGGECnx2bmKizXN2quv3cMhMtAUNQFTK2LP\"]},\"contracts/interfaces/IInterestRateCredit.sol\":{\"keccak256\":\"0xc97676db4d1ea29e58d2d32ec6b5dd41e92dfff0fe4e4fcc06537b75def27ecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://64c8269b9b3d021245d978c86d6d6677a0fe8017f5b58691f9470661355e8046\",\"dweb:/ipfs/QmcebtPEGbBrgfmtKZHtyLYvtvirPFKK8tk1g6yCpekAng\"]},\"contracts/interfaces/ILineOfCredit.sol\":{\"keccak256\":\"0x6a870ae1b7915c3dcc539290fb68aa0928154bd0024690d7d815320358275ee5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cf367c132f1d661e5d3aad07953690b7f7eff32929012f9117dba0c018c953de\",\"dweb:/ipfs/QmQ2BUj8LCjCQcVeVJwTZCL6TAz1Ncok4bcHdsk8BShuiq\"]},\"contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0x76882ce0a61874c8bd4dbda585bfaa89a4d97db2b50733694778be107ee04721\",\"urls\":[\"bzz-raw://28d2da093aa45b2c12b411a4df670e8ff1bb5e96734fcaa8704d9c8c270c98d5\",\"dweb:/ipfs/QmYkRs46SwC9t3r7SGjr2LH1vUacNTq6CQ1EsD1pNx2k85\"]},\"contracts/modules/credit/EscrowedLine.sol\":{\"keccak256\":\"0xcf412971b78a7326d10146ee89485973d5c3cd36d9a48ea7d60a957c8c897e62\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcfb833238f7ff10af0889b3a25efcdcda89ceffceff4bcebdb9037824565b8a\",\"dweb:/ipfs/QmeWasiUFuadkHXVZwessnd6PecPJmSByd2oPeiXSLBEfZ\"]},\"contracts/modules/credit/LineOfCredit.sol\":{\"keccak256\":\"0x1e0417a3a00e0dc1ca7b497f24abb5e5937cb16a98e9269839ad70a37e48dadc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7efe4064aad65ab27e1485bf330f0aeab5a1077703d1ce384a49e2f5129eb1a\",\"dweb:/ipfs/QmXw6M5iX2DZguTedZZPZrc7St9zSD4QBK3bKjxSLtQUKK\"]},\"contracts/modules/interest-rate/InterestRateCredit.sol\":{\"keccak256\":\"0x002afdd513aa995adb4231c3cb8ded49a946ac0739162f87147d8d50b5fe3738\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0e7afc2ec816ef81747f5759a48210ed25064b93ead8d91325236a84226ca0e2\",\"dweb:/ipfs/QmavPSDPQBvLcx6kk8kR1iC6J2FN8T5uGvvP1q5XG3Srus\"]},\"contracts/utils/CreditLib.sol\":{\"keccak256\":\"0x7e9e3b508d16af8cf79aca6bd3f37a24c7bd792c8b71ba50805d31f3ac6eee5c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f37707cb08c8844cda26774a4c6b6efc16c57601e33e12bfa510fe77ded1d483\",\"dweb:/ipfs/QmT2KPkdJnNxLEKfQe843CGoY7dAURpCCrLWkf6XB6U8ZU\"]},\"contracts/utils/CreditListLib.sol\":{\"keccak256\":\"0x8cf0bcb3a694d26bf381aa8dd78ee97b88c863cfcae99007366ed28dba72c3f2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f956680e58ba5f8a1a3306cadc3639e8dc7eae440d7d1789c585b8344b811af\",\"dweb:/ipfs/QmNa4jrpGEHYa5S41L7gGnPNDTXXyNQtZGLuE2DqFN6qmw\"]},\"contracts/utils/LineLib.sol\":{\"keccak256\":\"0x28cc72ba6bccbae092e5f3a2d5ef5fd0ae640b51f90b9afb224d3568ba2e3858\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f091a4d8f7d299f9753a97ca2217206481e54c99414792eef7ae4a2023109f09\",\"dweb:/ipfs/Qma9rGQYP9utdG5bfAHLep5znqs3xyKHnjBPLf8mEpjDsG\"]},\"contracts/utils/MutualConsent.sol\":{\"keccak256\":\"0x2f5ce27dc74e49310487475a02b3d479a572d1dd1d1bd61fd8f65aada053d089\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7a35c4412114fa66928df0c1ea8cabe2b0118e4709a065b23d96fde75362c2fb\",\"dweb:/ipfs/QmY6VEeZpfhvLYNrozt9aLYThmAuNUDPawZxsShQyRD2Lx\"]},\"lib/chainlink/contracts/src/v0.8/Denominations.sol\":{\"keccak256\":\"0xee406990d671c95993762c3ee15c77987ee35c3682357c419ff73747a728fc4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cacf9bf3ceca86053bfb23b12c42bfa7a3e28f2e7c548388cb6ceb372357bdc2\",\"dweb:/ipfs/QmcgE9akf5P6vjUpe9Kz3zANFSpbQsm9HM8RyXv1TLsRSP\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadyInitialized"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"type":"error","name":"BadModule"},{"inputs":[],"type":"error","name":"BorrowFailed"},{"inputs":[],"type":"error","name":"CallerAccessDenied"},{"inputs":[],"type":"error","name":"CantStepQ"},{"inputs":[],"type":"error","name":"CloseFailedWithPrincipal"},{"inputs":[],"type":"error","name":"EthSupportDisabled"},{"inputs":[],"type":"error","name":"NoLiquidity"},{"inputs":[],"type":"error","name":"NoTokenPrice"},{"inputs":[],"type":"error","name":"NotActive"},{"inputs":[],"type":"error","name":"NotBorrowing"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"type":"error","name":"NotInsolvent"},{"inputs":[],"type":"error","name":"NotLiquidatable"},{"inputs":[],"type":"error","name":"PositionExists"},{"inputs":[],"type":"error","name":"PositionIsClosed"},{"inputs":[{"internalType":"uint256","name":"totalAvailable","type":"uint256"}],"type":"error","name":"RepayAmountExceedsDebt"},{"inputs":[],"type":"error","name":"TokenTransferFailed"},{"inputs":[{"internalType":"address","name":"lender","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"deposit","type":"uint256","indexed":true},{"internalType":"bytes32","name":"id","type":"bytes32","indexed":false}],"type":"event","name":"AddCredit","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"Borrow","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true}],"type":"event","name":"CloseCreditPosition","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true}],"type":"event","name":"Default","anonymous":false},{"inputs":[{"internalType":"address","name":"oracle","type":"address","indexed":true},{"internalType":"address","name":"arbiter","type":"address","indexed":true},{"internalType":"address","name":"borrower","type":"address","indexed":true}],"type":"event","name":"DeployLine","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"deposit","type":"uint256","indexed":true}],"type":"event","name":"IncreaseCredit","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"InterestAccrued","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"address","name":"escrow","type":"address","indexed":false}],"type":"event","name":"Liquidate","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"RepayInterest","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"RepayPrincipal","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint128","name":"dRate","type":"uint128","indexed":true},{"internalType":"uint128","name":"fRate","type":"uint128","indexed":true}],"type":"event","name":"SetRates","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"newIdx","type":"uint256","indexed":true},{"internalType":"uint256","name":"oldIdx","type":"uint256","indexed":true},{"internalType":"bytes32","name":"oldId","type":"bytes32","indexed":false}],"type":"event","name":"SortedIntoQ","anonymous":false},{"inputs":[{"internalType":"uint256","name":"status","type":"uint256","indexed":true}],"type":"event","name":"UpdateStatus","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"WithdrawDeposit","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"WithdrawProfit","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"accrueInterest"},{"inputs":[{"internalType":"uint128","name":"drate","type":"uint128"},{"internalType":"uint128","name":"frate","type":"uint128"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"lender","type":"address"}],"stateMutability":"payable","type":"function","name":"addCredit","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"arbiter","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"available","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"borrow"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"borrower","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"close"},{"inputs":[],"stateMutability":"view","type":"function","name":"counts","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"declareInsolvent"},{"inputs":[],"stateMutability":"payable","type":"function","name":"depositAndClose"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"depositAndRepay"},{"inputs":[],"stateMutability":"view","type":"function","name":"escrow","outputs":[{"internalType":"contract IEscrow","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"healthcheck","outputs":[{"internalType":"enum LineLib.STATUS","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"increaseCredit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"init"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"interestAccrued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"targetToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"liquidate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nextInQ","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint128","name":"","type":"uint128"},{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"oracle","outputs":[{"internalType":"contract IOracle","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint128","name":"drate","type":"uint128"},{"internalType":"uint128","name":"frate","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"setRates"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"status","outputs":[{"internalType":"enum LineLib.STATUS","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stepQ"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"updateOutstandingDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"accrueInterest()":{"details":"- Loops over all position ids and calls related internal functions during which InterestRateCredit.sol           is called with the id data and then 'interestAccrued' is updated.- The related internal function _accrue() is called by other functions any time the balance on an individual           credit line changes or if the interest rates of a credit line are changed by mutual consent           between a Borrower and a Lender."},"addCredit(uint128,uint128,uint256,address,address)":{"details":"- Requires mutualConsent participants send EXACT same params when calling addCredit- Fully executes function after a Borrower and a Lender have agreed terms, both Lender and borrower have agreed through mutualConsent- callable by `lender` and `borrower`","params":{"amount":"- The amount of Credit Token to initially deposit by the Lender","drate":"- The interest rate charged to a Borrower on borrowed / drawn down funds. In bps, 4 decimals.","frate":"- The interest rate charged to a Borrower on the remaining funds available, but not yet drawn down (rate charged on the available headroom). In bps, 4 decimals.","lender":"- The address that will manage credit line","token":"- The Credit Token, i.e. the token to be lent out"},"returns":{"_0":"id     - Lender's position id to look up in `credits`"}},"available(bytes32)":{"returns":{"_0":"- (uint256, uint256) - remaining deposit, claimable interest"}},"borrow(bytes32,uint256)":{"details":"- callable by borrower","params":{"amount":"- amount of tokens the borrower wants to withdraw","id":"- the position to draw down on"}},"close(bytes32)":{"details":"- MUST repay accrued interest from facility fee during call- callable by `borrower` or Lender- The function retains the `payable` designation, despite reverting with a non-zero msg.value, as a gas-optimization","params":{"id":"-the position id to be closed"}},"counts()":{"returns":{"_0":"- (uint256, uint256) - active credit lines, total length"}},"declareInsolvent()":{"details":"- Needed for onchain impairment accounting e.g. updating ERC4626 share price         - MUST NOT have collateral left for call to succeed. Any collateral must already have been liquidated.- Callable only by Arbiter."},"depositAndClose()":{"details":"- callable by borrower- The function retains the `payable` designation, despite reverting with a non-zero msg.value, as a gas-optimization"},"depositAndRepay(uint256)":{"details":"- Available for anyone to deposit Credit Tokens to be available to be withdrawn by Lenders- The function retains the `payable` designation, despite reverting with a non-zero msg.value, as a gas-optimization","params":{"amount":"- amount of `token` in `id` to pay back"}},"increaseCredit(bytes32,uint256)":{"details":"- line status must be ACTIVE- callable by borrower- The function retains the `payable` designation, despite not accepting Eth via mutualConsent modifier, as a gas-optimization","params":{"amount":"- amount to deposit by the Lender","id":"- position id that we are updating"}},"init()":{"details":"- Reverts on failure to update status"},"interestAccrued(bytes32)":{"returns":{"_0":"- (uint256, uint256) - active credit lines, total length"}},"liquidate(uint256,address)":{"details":"- only callable by Arbiter- Line status MUST be LIQUIDATABLE- callable by `arbiter`","params":{"amount":"- amount of `targetToken` expected to be sold off in  _liquidate","targetToken":"- token in escrow that will be sold of to repay position"}},"nextInQ()":{"returns":{"_0":"- (bytes32, address, address, uint, uint) - id, lender, token, principal, interestAccrued"}},"setRates(bytes32,uint128,uint128)":{"details":"- callable by Borrower or Lender","params":{"drate":"- new drawn rate. In bps, 4 decimals","frate":"- new facility rate. In bps, 4 decimals","id":"- position id that we are updating"}},"stepQ()":{"details":"- Only works if the first element in the queue is null"},"updateOutstandingDebt()":{"details":"- Denominated in USD, 8 decimals.- callable by anyone","returns":{"_0":"totalPrincipal - total amount of principal, in USD, owed across all positions","_1":"totalInterest - total amount of interest, in USD,  owed across all positions"}},"withdraw(bytes32,uint256)":{"details":"- can only withdraw tokens from their own position. If multiple lenders lend DAI, the lender1 can't withdraw using lender2's tokens- callable by Lender on `id`","params":{"amount":"- amount of tokens the Lender would like to withdraw (withdrawn amount may be lower)","id":"- the position id that Lender is withdrawing from"}}},"version":1},"userdoc":{"kind":"user","methods":{"accrueInterest()":{"notice":"- Updates accrued interest for the whole Line of Credit facility (i.e. for all credit lines)"},"addCredit(uint128,uint128,uint256,address,address)":{"notice":"- On first call, creates proposed terms and emits MutualConsentRegistsered event. No position is created. - On second call, creates position and stores in Line contract, sets interest rates, and starts accruing facility rate fees."},"available(bytes32)":{"notice":"- how many tokens can be withdrawn from positions by borrower or lender"},"borrow(bytes32,uint256)":{"notice":"- Borrower chooses which lender position draw down on and transfers tokens from Line contract to Borrower"},"close(bytes32)":{"notice":"- Removes and deletes a position, preventing any more borrowing or interest.         - Requires that the position principal has already been repais in full"},"counts()":{"notice":"- getter for amount of active ids + total ids in list"},"declareInsolvent()":{"notice":"- Allow the Arbiter to signify that the Borrower is incapable of repaying debt permanently.         - Recoverable funds for Lender after declaring insolvency = deposit + interestRepaid - principal"},"depositAndClose()":{"notice":"- A Borrower deposits enough tokens to repay and close a credit line."},"depositAndRepay(uint256)":{"notice":"- Transfers token used in position id from msg.sender to Line contract.- see LineOfCredit._repay() for more details"},"escrow()":{"notice":"the escrow contract backing this Line"},"increaseCredit(bytes32,uint256)":{"notice":"- Lets a Lender and a Borrower increase the credit limit on a position"},"init()":{"notice":"- Runs logic to ensure Line owns all modules are configured properly - collateral, interest rates, arbiter, etc.          - Changes `status` from UNINITIALIZED to ACTIVE"},"interestAccrued(bytes32)":{"notice":"- getter for amount of active ids + total ids in list"},"liquidate(uint256,address)":{"notice":"- Forcefully take collateral from Escrow and repay debt for lender          - current implementation just sends \"liquidated\" tokens to Arbiter to sell off how the deem fit and then manually repay with DepositAndRepay"},"nextInQ()":{"notice":"- info on the next lender position that must be repaid"},"setRates(bytes32,uint128,uint128)":{"notice":"- lets Lender and Borrower update rates on the lender's position                   - accrues interest before updating terms, per InterestRate docs                   - can do so even when LIQUIDATABLE for the purpose of refinancing and/or renego"},"stepQ()":{"notice":"- Cycles through position ids andselects first position with non-null principal to the zero index"},"updateOutstandingDebt()":{"notice":"- Returns the total debt of a Borrower across all positions for all Lenders."},"withdraw(bytes32,uint256)":{"notice":"- Withdraws liquidity from a Lender's position available to the Borrower.         - Lender is only allowed to withdraw tokens not already lent out         - Withdraws from repaid interest (profit) first and then deposit is reduced"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/contracts/src/v0.8/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/modules/credit/EscrowedLine.sol":"EscrowedLine"},"evmVersion":"london","libraries":{"contracts/utils/CreditLib.sol:CreditLib":"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87","contracts/utils/CreditListLib.sol:CreditListLib":"0x9cbe9741b3503a790e69e1587b5d51c0056154dc","contracts/utils/EscrowLib.sol:EscrowLib":"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2","contracts/utils/LineFactoryLib.sol:LineFactoryLib":"0x2b721a999b83cbcc1dbd697a27199d5b4be70102","contracts/utils/LineLib.sol:LineLib":"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812","contracts/utils/SpigotedLineLib.sol:SpigotedLineLib":"0x274946031d204567281f7616718b4abb940ef784"}},"sources":{"contracts/interfaces/IEscrow.sol":{"keccak256":"0x9e7a6075ca4cd807aa79a7ea99db3edce491906f4ce030d3c9301d44bf0427e8","urls":["bzz-raw://c63714477a2cbf16bf1c6855decd4b9dfce1fdee16023b6a1cf42e40f72bb7ef","dweb:/ipfs/QmNhVkdYdKY75RJUkRfKVA3mwBeQ4mu4REyggBfB6Z3MwA"],"license":"GPL-3.0"},"contracts/interfaces/IEscrowedLine.sol":{"keccak256":"0x18332c10988277602a59c2bade83010367bbca5c83ab3886c6fdfdb60e1594fa","urls":["bzz-raw://8c8a5923cb23a0a2030bd71af6ce6808aedb24627172d61715695f856399a9a3","dweb:/ipfs/QmdmbdaXJe7MGGECnx2bmKizXN2quv3cMhMtAUNQFTK2LP"],"license":"GPL-3.0"},"contracts/interfaces/IInterestRateCredit.sol":{"keccak256":"0xc97676db4d1ea29e58d2d32ec6b5dd41e92dfff0fe4e4fcc06537b75def27ecb","urls":["bzz-raw://64c8269b9b3d021245d978c86d6d6677a0fe8017f5b58691f9470661355e8046","dweb:/ipfs/QmcebtPEGbBrgfmtKZHtyLYvtvirPFKK8tk1g6yCpekAng"],"license":"GPL-3.0"},"contracts/interfaces/ILineOfCredit.sol":{"keccak256":"0x6a870ae1b7915c3dcc539290fb68aa0928154bd0024690d7d815320358275ee5","urls":["bzz-raw://cf367c132f1d661e5d3aad07953690b7f7eff32929012f9117dba0c018c953de","dweb:/ipfs/QmQ2BUj8LCjCQcVeVJwTZCL6TAz1Ncok4bcHdsk8BShuiq"],"license":"GPL-3.0"},"contracts/interfaces/IOracle.sol":{"keccak256":"0x76882ce0a61874c8bd4dbda585bfaa89a4d97db2b50733694778be107ee04721","urls":["bzz-raw://28d2da093aa45b2c12b411a4df670e8ff1bb5e96734fcaa8704d9c8c270c98d5","dweb:/ipfs/QmYkRs46SwC9t3r7SGjr2LH1vUacNTq6CQ1EsD1pNx2k85"],"license":null},"contracts/modules/credit/EscrowedLine.sol":{"keccak256":"0xcf412971b78a7326d10146ee89485973d5c3cd36d9a48ea7d60a957c8c897e62","urls":["bzz-raw://dcfb833238f7ff10af0889b3a25efcdcda89ceffceff4bcebdb9037824565b8a","dweb:/ipfs/QmeWasiUFuadkHXVZwessnd6PecPJmSByd2oPeiXSLBEfZ"],"license":"GPL-3.0"},"contracts/modules/credit/LineOfCredit.sol":{"keccak256":"0x1e0417a3a00e0dc1ca7b497f24abb5e5937cb16a98e9269839ad70a37e48dadc","urls":["bzz-raw://e7efe4064aad65ab27e1485bf330f0aeab5a1077703d1ce384a49e2f5129eb1a","dweb:/ipfs/QmXw6M5iX2DZguTedZZPZrc7St9zSD4QBK3bKjxSLtQUKK"],"license":"GPL-3.0"},"contracts/modules/interest-rate/InterestRateCredit.sol":{"keccak256":"0x002afdd513aa995adb4231c3cb8ded49a946ac0739162f87147d8d50b5fe3738","urls":["bzz-raw://0e7afc2ec816ef81747f5759a48210ed25064b93ead8d91325236a84226ca0e2","dweb:/ipfs/QmavPSDPQBvLcx6kk8kR1iC6J2FN8T5uGvvP1q5XG3Srus"],"license":"GPL-3.0"},"contracts/utils/CreditLib.sol":{"keccak256":"0x7e9e3b508d16af8cf79aca6bd3f37a24c7bd792c8b71ba50805d31f3ac6eee5c","urls":["bzz-raw://f37707cb08c8844cda26774a4c6b6efc16c57601e33e12bfa510fe77ded1d483","dweb:/ipfs/QmT2KPkdJnNxLEKfQe843CGoY7dAURpCCrLWkf6XB6U8ZU"],"license":"GPL-3.0"},"contracts/utils/CreditListLib.sol":{"keccak256":"0x8cf0bcb3a694d26bf381aa8dd78ee97b88c863cfcae99007366ed28dba72c3f2","urls":["bzz-raw://8f956680e58ba5f8a1a3306cadc3639e8dc7eae440d7d1789c585b8344b811af","dweb:/ipfs/QmNa4jrpGEHYa5S41L7gGnPNDTXXyNQtZGLuE2DqFN6qmw"],"license":"GPL-3.0"},"contracts/utils/LineLib.sol":{"keccak256":"0x28cc72ba6bccbae092e5f3a2d5ef5fd0ae640b51f90b9afb224d3568ba2e3858","urls":["bzz-raw://f091a4d8f7d299f9753a97ca2217206481e54c99414792eef7ae4a2023109f09","dweb:/ipfs/Qma9rGQYP9utdG5bfAHLep5znqs3xyKHnjBPLf8mEpjDsG"],"license":"GPL-3.0"},"contracts/utils/MutualConsent.sol":{"keccak256":"0x2f5ce27dc74e49310487475a02b3d479a572d1dd1d1bd61fd8f65aada053d089","urls":["bzz-raw://7a35c4412114fa66928df0c1ea8cabe2b0118e4709a065b23d96fde75362c2fb","dweb:/ipfs/QmY6VEeZpfhvLYNrozt9aLYThmAuNUDPawZxsShQyRD2Lx"],"license":"GPL-3.0"},"lib/chainlink/contracts/src/v0.8/Denominations.sol":{"keccak256":"0xee406990d671c95993762c3ee15c77987ee35c3682357c419ff73747a728fc4d","urls":["bzz-raw://cacf9bf3ceca86053bfb23b12c42bfa7a3e28f2e7c548388cb6ceb372357bdc2","dweb:/ipfs/QmcgE9akf5P6vjUpe9Kz3zANFSpbQsm9HM8RyXv1TLsRSP"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff","urls":["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d","dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386","urls":["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0","dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721","urls":["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245","dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/modules/credit/EscrowedLine.sol","id":2949,"exportedSymbols":{"EscrowedLine":[2948],"IEscrow":[115],"IEscrowedLine":[147],"ILineOfCredit":[653],"LineLib":[57029],"LineOfCredit":[4320]},"nodeType":"SourceUnit","src":"130:3148:27","nodes":[{"id":2794,"nodeType":"PragmaDirective","src":"130:24:27","nodes":[],"literals":["solidity","^","0.8",".16"]},{"id":2796,"nodeType":"ImportDirective","src":"156:53:27","nodes":[],"absolutePath":"contracts/interfaces/IEscrow.sol","file":"../../interfaces/IEscrow.sol","nameLocation":"-1:-1:-1","scope":2949,"sourceUnit":116,"symbolAliases":[{"foreign":{"id":2795,"name":"IEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"164:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2798,"nodeType":"ImportDirective","src":"210:48:27","nodes":[],"absolutePath":"contracts/utils/LineLib.sol","file":"../../utils/LineLib.sol","nameLocation":"-1:-1:-1","scope":2949,"sourceUnit":57030,"symbolAliases":[{"foreign":{"id":2797,"name":"LineLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57029,"src":"218:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2800,"nodeType":"ImportDirective","src":"259:65:27","nodes":[],"absolutePath":"contracts/interfaces/IEscrowedLine.sol","file":"../../interfaces/IEscrowedLine.sol","nameLocation":"-1:-1:-1","scope":2949,"sourceUnit":148,"symbolAliases":[{"foreign":{"id":2799,"name":"IEscrowedLine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"267:13:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2802,"nodeType":"ImportDirective","src":"325:65:27","nodes":[],"absolutePath":"contracts/interfaces/ILineOfCredit.sol","file":"../../interfaces/ILineOfCredit.sol","nameLocation":"-1:-1:-1","scope":2949,"sourceUnit":654,"symbolAliases":[{"foreign":{"id":2801,"name":"ILineOfCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"333:13:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2804,"nodeType":"ImportDirective","src":"437:48:27","nodes":[],"absolutePath":"contracts/modules/credit/LineOfCredit.sol","file":"./LineOfCredit.sol","nameLocation":"-1:-1:-1","scope":2949,"sourceUnit":4321,"symbolAliases":[{"foreign":{"id":2803,"name":"LineOfCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"445:12:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2948,"nodeType":"ContractDefinition","src":"540:2737:27","nodes":[{"id":2811,"nodeType":"VariableDeclaration","src":"661:31:27","nodes":[],"baseFunctions":[146],"constant":false,"functionSelector":"e2fdcc17","mutability":"immutable","name":"escrow","nameLocation":"686:6:27","scope":2948,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"},"typeName":{"id":2810,"nodeType":"UserDefinedTypeName","pathNode":{"id":2809,"name":"IEscrow","nameLocations":["661:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"661:7:27"},"referencedDeclaration":115,"src":"661:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"visibility":"public"},{"id":2823,"nodeType":"FunctionDefinition","src":"699:71:27","nodes":[],"body":{"id":2822,"nodeType":"Block","src":"728:42:27","nodes":[],"statements":[{"expression":{"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2816,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"738:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2818,"name":"_escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"755:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2817,"name":"IEscrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"747:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEscrow_$115_$","typeString":"type(contract IEscrow)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"747:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"src":"738:25:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"id":2821,"nodeType":"ExpressionStatement","src":"738:25:27"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"_escrow","nameLocation":"719:7:27","nodeType":"VariableDeclaration","scope":2823,"src":"711:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"711:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"710:17:27"},"returnParameters":{"id":2815,"nodeType":"ParameterList","parameters":[],"src":"728:0:27"},"scope":2948,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":2844,"nodeType":"FunctionDefinition","src":"937:120:27","nodes":[],"body":{"id":2843,"nodeType":"Block","src":"971:86:27","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2827,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"985:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"992:4:27","memberName":"line","nodeType":"MemberAccess","referencedDeclaration":39,"src":"985:11:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_address_$","typeString":"function () external returns (address)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2832,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1010:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_EscrowedLine_$2948","typeString":"contract EscrowedLine"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EscrowedLine_$2948","typeString":"contract EscrowedLine"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1002:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:27","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"985:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"981:69:27","trueBody":{"errorCall":{"arguments":[{"arguments":[{"id":2838,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1042:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1034:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2836,"name":"address","nodeType":"ElementaryTypeName","src":"1034:7:27","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1034:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2835,"name":"BadModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1024:9:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2841,"nodeType":"RevertStatement","src":"1017:33:27"}}]},"documentation":{"id":2824,"nodeType":"StructuredDocumentation","src":"776:156:27","text":" see LineOfCredit._init and SecuredLine.init\n @notice requires this Line is owner of the Escrowed collateral else Line will not init"},"implemented":true,"kind":"function","modifiers":[],"name":"_init","nameLocation":"946:5:27","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"951:2:27"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[],"src":"971:0:27"},"scope":2948,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":2865,"nodeType":"FunctionDefinition","src":"1244:209:27","nodes":[],"body":{"id":2864,"nodeType":"Block","src":"1310:143:27","nodes":[],"statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2851,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1324:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1331:14:27","memberName":"isLiquidatable","nodeType":"MemberAccess","referencedDeclaration":59,"src":"1324:21:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_bool_$","typeString":"function () external returns (bool)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2859,"nodeType":"IfStatement","src":"1320:88:27","trueBody":{"id":2858,"nodeType":"Block","src":"1349:59:27","statements":[{"expression":{"expression":{"expression":{"id":2854,"name":"LineLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57029,"src":"1370:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LineLib_$57029_$","typeString":"type(library LineLib)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1378:6:27","memberName":"STATUS","nodeType":"MemberAccess","referencedDeclaration":56822,"src":"1370:14:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_STATUS_$56822_$","typeString":"type(enum LineLib.STATUS)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:27","memberName":"LIQUIDATABLE","nodeType":"MemberAccess","referencedDeclaration":56819,"src":"1370:27:27","typeDescriptions":{"typeIdentifier":"t_enum$_STATUS_$56822","typeString":"enum LineLib.STATUS"}},"functionReturnParameters":2850,"id":2857,"nodeType":"Return","src":"1363:34:27"}]}},{"expression":{"expression":{"expression":{"id":2860,"name":"LineLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57029,"src":"1425:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LineLib_$57029_$","typeString":"type(library LineLib)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:6:27","memberName":"STATUS","nodeType":"MemberAccess","referencedDeclaration":56822,"src":"1425:14:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_STATUS_$56822_$","typeString":"type(enum LineLib.STATUS)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1440:6:27","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":56818,"src":"1425:21:27","typeDescriptions":{"typeIdentifier":"t_enum$_STATUS_$56822","typeString":"enum LineLib.STATUS"}},"functionReturnParameters":2850,"id":2863,"nodeType":"Return","src":"1418:28:27"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"1063:176:27","text":" see LineOfCredit._healthcheck and SecuredLine._healthcheck\n @notice returns LIQUIDATABLE if Escrow contract is undercollateralized, else returns ACTIVE"},"implemented":true,"kind":"function","modifiers":[],"name":"_healthcheck","nameLocation":"1253:12:27","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[],"src":"1265:2:27"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2865,"src":"1294:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_STATUS_$56822","typeString":"enum LineLib.STATUS"},"typeName":{"id":2848,"nodeType":"UserDefinedTypeName","pathNode":{"id":2847,"name":"LineLib.STATUS","nameLocations":["1294:7:27","1302:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":56822,"src":"1294:14:27"},"referencedDeclaration":56822,"src":"1294:14:27","typeDescriptions":{"typeIdentifier":"t_enum$_STATUS_$56822","typeString":"enum LineLib.STATUS"}},"visibility":"internal"}],"src":"1293:16:27"},"scope":2948,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":2906,"nodeType":"FunctionDefinition","src":"2007:363:27","nodes":[],"body":{"id":2905,"nodeType":"Block","src":"2161:209:27","nodes":[],"statements":[{"assignments":[2881],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"escrow_","nameLocation":"2179:7:27","nodeType":"VariableDeclaration","scope":2905,"src":"2171:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"},"typeName":{"id":2880,"nodeType":"UserDefinedTypeName","pathNode":{"id":2879,"name":"IEscrow","nameLocations":["2171:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"2171:7:27"},"referencedDeclaration":115,"src":"2171:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"visibility":"internal"}],"id":2883,"initialValue":{"id":2882,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2189:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"nodeType":"VariableDeclarationStatement","src":"2171:24:27"},{"expression":{"arguments":[{"arguments":[{"id":2887,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2246:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2888,"name":"targetToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2254:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2267:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2885,"name":"escrow_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"2228:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2236:9:27","memberName":"liquidate","nodeType":"MemberAccess","referencedDeclaration":114,"src":"2228:17:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address,address) external returns (bool)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2220:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2892,"nodeType":"ExpressionStatement","src":"2220:51:27"},{"eventCall":{"arguments":[{"id":2894,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2297:2:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2895,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2301:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2896,"name":"targetToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2309:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2899,"name":"escrow_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"2330:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}],"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2322:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"2322:7:27","typeDescriptions":{}}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2322:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2893,"name":"Liquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2287:9:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,address,address)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2902,"nodeType":"EmitStatement","src":"2282:57:27"},{"expression":{"id":2903,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2357:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2878,"id":2904,"nodeType":"Return","src":"2350:13:27"}]},"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"1459:543:27","text":" see SecuredlLine.liquidate\n @notice sends escrowed tokens to liquidation.\n @dev priviliegad function. Do checks before calling.\n @param id - The credit line being repaid via the liquidation\n @param amount - amount of tokens to take from escrow and liquidate\n @param targetToken - the token to take from escrow\n @param to - the liquidator to send tokens to. could be OTC address or smart contract\n @return amount - the total amount of `targetToken` sold to repay credit"},"implemented":true,"kind":"function","modifiers":[],"name":"_liquidate","nameLocation":"2016:10:27","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"id","nameLocation":"2044:2:27","nodeType":"VariableDeclaration","scope":2906,"src":"2036:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"amount","nameLocation":"2064:6:27","nodeType":"VariableDeclaration","scope":2906,"src":"2056:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"targetToken","nameLocation":"2088:11:27","nodeType":"VariableDeclaration","scope":2906,"src":"2080:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2871,"name":"address","nodeType":"ElementaryTypeName","src":"2080:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"to","nameLocation":"2117:2:27","nodeType":"VariableDeclaration","scope":2906,"src":"2109:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2026:99:27"},"returnParameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"2152:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:9:27"},"scope":2948,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":2929,"nodeType":"FunctionDefinition","src":"2627:200:27","nodes":[],"body":{"id":2928,"nodeType":"Block","src":"2691:136:27","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2912,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2705:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2712:18:27","memberName":"getCollateralValue","nodeType":"MemberAccess","referencedDeclaration":76,"src":"2705:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_uint256_$","typeString":"function () external returns (uint256)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2705:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2736:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2705:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2925,"nodeType":"IfStatement","src":"2701:99:27","trueBody":{"id":2924,"nodeType":"Block","src":"2739:61:27","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2920,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2781:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}],"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2773:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"2773:7:27","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2773:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2917,"name":"NotInsolvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2760:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2760:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"RevertStatement","src":"2753:36:27"}]}},{"expression":{"hexValue":"74727565","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2816:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2911,"id":2927,"nodeType":"Return","src":"2809:11:27"}]},"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"2376:246:27","text":" see SecuredLine.declareInsolvent\n @notice require all collateral sold off before declaring insolvent\n(@dev priviliegad internal function.\n @return isInsolvent - if Escrow contract is currently insolvent or not"},"implemented":true,"kind":"function","modifiers":[],"name":"_canDeclareInsolvent","nameLocation":"2636:20:27","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[],"src":"2656:2:27"},"returnParameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"2685:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2909,"name":"bool","nodeType":"ElementaryTypeName","src":"2685:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2684:6:27"},"scope":2948,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":2947,"nodeType":"FunctionDefinition","src":"3134:141:27","nodes":[],"body":{"id":2946,"nodeType":"Block","src":"3202:73:27","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":2940,"name":"newLine","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"3238:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2938,"name":"escrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"3220:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IEscrow_$115","typeString":"contract IEscrow"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3227:10:27","memberName":"updateLine","nodeType":"MemberAccess","referencedDeclaration":66,"src":"3220:17:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) external returns (bool)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3212:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2943,"nodeType":"ExpressionStatement","src":"3212:35:27"},{"expression":{"hexValue":"74727565","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3264:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2936,"id":2945,"nodeType":"Return","src":"3257:11:27"}]},"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"2833:296:27","text":" see SecuredlLine.rollover\n @notice helper function to allow borrower to easily swithc collateral to a new Line after repyment\n(@dev priviliegad internal function.\n @dev MUST only be callable if line is REPAID\n @return - if function successfully executed"},"implemented":true,"kind":"function","modifiers":[],"name":"_rollover","nameLocation":"3143:9:27","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"newLine","nameLocation":"3161:7:27","nodeType":"VariableDeclaration","scope":2947,"src":"3153:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"3153:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3152:17:27"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"3196:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2934,"name":"bool","nodeType":"ElementaryTypeName","src":"3196:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3195:6:27"},"scope":2948,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":2805,"name":"IEscrowedLine","nameLocations":["574:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"574:13:27"},"id":2806,"nodeType":"InheritanceSpecifier","src":"574:13:27"},{"baseName":{"id":2807,"name":"ILineOfCredit","nameLocations":["589:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"589:13:27"},"id":2808,"nodeType":"InheritanceSpecifier","src":"589:13:27"}],"canonicalName":"EscrowedLine","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"linearizedBaseContracts":[2948,653,147],"name":"EscrowedLine","nameLocation":"558:12:27","scope":2949,"usedErrors":[450,452,454,456,458,462,464,466,468,472,474,476,478,482,484,486,488],"usedEvents":[129,362,370,380,390,398,404,410,416,420,426,432,438,444,448]}],"license":"GPL-3.0"},"id":27}