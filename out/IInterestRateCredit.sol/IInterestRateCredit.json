{"abi":[{"type":"function","name":"accrueInterest","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"drawnBalance","type":"uint256","internalType":"uint256"},{"name":"facilityBalance","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getInterestAccrued","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"drawnBalance","type":"uint256","internalType":"uint256"},{"name":"facilityBalance","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRates","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"},{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"setRate","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"dRate","type":"uint128","internalType":"uint128"},{"name":"fRate","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accrueInterest(bytes32,uint256,uint256)":"c6198352","getInterestAccrued(bytes32,uint256,uint256)":"b6973283","getRates(bytes32)":"7443c907","setRate(bytes32,uint128,uint128)":"9412647f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"drawnBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"facilityBalance\",\"type\":\"uint256\"}],\"name\":\"accrueInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"drawnBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"facilityBalance\",\"type\":\"uint256\"}],\"name\":\"getInterestAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getRates\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"dRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fRate\",\"type\":\"uint128\"}],\"name\":\"setRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accrueInterest(bytes32,uint256,uint256)\":{\"details\":\"- pure function that only calculates interest owed. Line is responsible for actually updating credit balances with returned value- callable by `lineContract`\",\"params\":{\"drawnBalance\":\"the balance of funds that a Borrower has drawn down on the credit line\",\"facilityBalance\":\"the remaining balance of funds that a Borrower can still drawn down on a credit line (aka headroom)\",\"id\":\"- position id on Line to look up interest rates for\"},\"returns\":{\"_0\":\"- the amount of interest to be repaid for this interest period\"}},\"setRate(bytes32,uint128,uint128)\":{\"details\":\"- MUST call accrueInterest() on Line before changing rates. If not, lender will not accrue interest over previous interest period.- callable by `line`\",\"returns\":{\"_0\":\"- if call was successful or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueInterest(bytes32,uint256,uint256)\":{\"notice\":\"- allows `lineContract to calculate how much interest is owed since it was last calculated charged at time `lastAccrued`\"},\"setRate(bytes32,uint128,uint128)\":{\"notice\":\"- updates interest rates on a lender's position. Updates lastAccrued time to block.timestamp\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IInterestRateCredit.sol\":\"IInterestRateCredit\"},\"evmVersion\":\"london\",\"libraries\":{\"contracts/utils/CreditLib.sol:CreditLib\":\"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87\",\"contracts/utils/CreditListLib.sol:CreditListLib\":\"0x9cbe9741b3503a790e69e1587b5d51c0056154dc\",\"contracts/utils/EscrowLib.sol:EscrowLib\":\"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2\",\"contracts/utils/LineFactoryLib.sol:LineFactoryLib\":\"0x2b721a999b83cbcc1dbd697a27199d5b4be70102\",\"contracts/utils/LineLib.sol:LineLib\":\"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812\",\"contracts/utils/SpigotedLineLib.sol:SpigotedLineLib\":\"0x274946031d204567281f7616718b4abb940ef784\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/contracts/src/v0.8/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/interfaces/IInterestRateCredit.sol\":{\"keccak256\":\"0xc97676db4d1ea29e58d2d32ec6b5dd41e92dfff0fe4e4fcc06537b75def27ecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://64c8269b9b3d021245d978c86d6d6677a0fe8017f5b58691f9470661355e8046\",\"dweb:/ipfs/QmcebtPEGbBrgfmtKZHtyLYvtvirPFKK8tk1g6yCpekAng\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"drawnBalance","type":"uint256"},{"internalType":"uint256","name":"facilityBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"accrueInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"drawnBalance","type":"uint256"},{"internalType":"uint256","name":"facilityBalance","type":"uint256"}],"stateMutability":"view","type":"function","name":"getInterestAccrued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRates","outputs":[{"internalType":"uint128","name":"","type":"uint128"},{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint128","name":"dRate","type":"uint128"},{"internalType":"uint128","name":"fRate","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"setRate","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"accrueInterest(bytes32,uint256,uint256)":{"details":"- pure function that only calculates interest owed. Line is responsible for actually updating credit balances with returned value- callable by `lineContract`","params":{"drawnBalance":"the balance of funds that a Borrower has drawn down on the credit line","facilityBalance":"the remaining balance of funds that a Borrower can still drawn down on a credit line (aka headroom)","id":"- position id on Line to look up interest rates for"},"returns":{"_0":"- the amount of interest to be repaid for this interest period"}},"setRate(bytes32,uint128,uint128)":{"details":"- MUST call accrueInterest() on Line before changing rates. If not, lender will not accrue interest over previous interest period.- callable by `line`","returns":{"_0":"- if call was successful or not"}}},"version":1},"userdoc":{"kind":"user","methods":{"accrueInterest(bytes32,uint256,uint256)":{"notice":"- allows `lineContract to calculate how much interest is owed since it was last calculated charged at time `lastAccrued`"},"setRate(bytes32,uint128,uint128)":{"notice":"- updates interest rates on a lender's position. Updates lastAccrued time to block.timestamp"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/contracts/src/v0.8/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IInterestRateCredit.sol":"IInterestRateCredit"},"evmVersion":"london","libraries":{"contracts/utils/CreditLib.sol:CreditLib":"0x4dca189d7fb51d9cc375e4d697e5800c5d21ff87","contracts/utils/CreditListLib.sol:CreditListLib":"0x9cbe9741b3503a790e69e1587b5d51c0056154dc","contracts/utils/EscrowLib.sol:EscrowLib":"0x9ae9c76276e503105f20c8b452ccd0c4ee3b2df2","contracts/utils/LineFactoryLib.sol:LineFactoryLib":"0x2b721a999b83cbcc1dbd697a27199d5b4be70102","contracts/utils/LineLib.sol:LineLib":"0x73cb72a7efaddd99cdd2d110e2f4b8b65bf3b812","contracts/utils/SpigotedLineLib.sol:SpigotedLineLib":"0x274946031d204567281f7616718b4abb940ef784"}},"sources":{"contracts/interfaces/IInterestRateCredit.sol":{"keccak256":"0xc97676db4d1ea29e58d2d32ec6b5dd41e92dfff0fe4e4fcc06537b75def27ecb","urls":["bzz-raw://64c8269b9b3d021245d978c86d6d6677a0fe8017f5b58691f9470661355e8046","dweb:/ipfs/QmcebtPEGbBrgfmtKZHtyLYvtvirPFKK8tk1g6yCpekAng"],"license":"GPL-3.0"}},"version":1},"ast":{"absolutePath":"contracts/interfaces/IInterestRateCredit.sol","id":202,"exportedSymbols":{"IInterestRateCredit":[201]},"nodeType":"SourceUnit","src":"130:2125:2","nodes":[{"id":149,"nodeType":"PragmaDirective","src":"130:24:2","nodes":[],"literals":["solidity","^","0.8",".16"]},{"id":201,"nodeType":"ContractDefinition","src":"156:2098:2","nodes":[{"id":156,"nodeType":"StructDefinition","src":"192:546:2","nodes":[],"canonicalName":"IInterestRateCredit.Rate","members":[{"constant":false,"id":151,"mutability":"mutable","name":"dRate","nameLocation":"334:5:2","nodeType":"VariableDeclaration","scope":156,"src":"326:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":150,"name":"uint128","nodeType":"ElementaryTypeName","src":"326:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"fRate","nameLocation":"536:5:2","nodeType":"VariableDeclaration","scope":156,"src":"528:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":152,"name":"uint128","nodeType":"ElementaryTypeName","src":"528:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"lastAccrued","nameLocation":"720:11:2","nodeType":"VariableDeclaration","scope":156,"src":"712:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Rate","nameLocation":"199:4:2","scope":201,"visibility":"public"},{"id":168,"nodeType":"FunctionDefinition","src":"1468:110:2","nodes":[],"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"744:718:2","text":" @notice - allows `lineContract to calculate how much interest is owed since it was last calculated charged at time `lastAccrued`\n @dev    - pure function that only calculates interest owed. Line is responsible for actually updating credit balances with returned value\n @dev    - callable by `lineContract`\n @param id - position id on Line to look up interest rates for\n @param drawnBalance the balance of funds that a Borrower has drawn down on the credit line\n @param facilityBalance the remaining balance of funds that a Borrower can still drawn down on a credit line (aka headroom)\n @return - the amount of interest to be repaid for this interest period"},"functionSelector":"c6198352","implemented":false,"kind":"function","modifiers":[],"name":"accrueInterest","nameLocation":"1477:14:2","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"id","nameLocation":"1500:2:2","nodeType":"VariableDeclaration","scope":168,"src":"1492:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1492:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"drawnBalance","nameLocation":"1512:12:2","nodeType":"VariableDeclaration","scope":168,"src":"1504:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"facilityBalance","nameLocation":"1534:15:2","nodeType":"VariableDeclaration","scope":168,"src":"1526:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1491:59:2"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1569:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1569:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1568:9:2"},"scope":201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":180,"nodeType":"FunctionDefinition","src":"1937:83:2","nodes":[],"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1584:348:2","text":" @notice - updates interest rates on a lender's position. Updates lastAccrued time to block.timestamp\n @dev    - MUST call accrueInterest() on Line before changing rates. If not, lender will not accrue interest over previous interest period.\n @dev    - callable by `line`\n @return - if call was successful or not"},"functionSelector":"9412647f","implemented":false,"kind":"function","modifiers":[],"name":"setRate","nameLocation":"1946:7:2","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"id","nameLocation":"1962:2:2","nodeType":"VariableDeclaration","scope":180,"src":"1954:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1954:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"dRate","nameLocation":"1974:5:2","nodeType":"VariableDeclaration","scope":180,"src":"1966:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":172,"name":"uint128","nodeType":"ElementaryTypeName","src":"1966:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"fRate","nameLocation":"1989:5:2","nodeType":"VariableDeclaration","scope":180,"src":"1981:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":174,"name":"uint128","nodeType":"ElementaryTypeName","src":"1981:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1953:42:2"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2014:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2013:6:2"},"scope":201,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":191,"nodeType":"FunctionDefinition","src":"2026:149:2","nodes":[],"functionSelector":"b6973283","implemented":false,"kind":"function","modifiers":[],"name":"getInterestAccrued","nameLocation":"2035:18:2","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"id","nameLocation":"2071:2:2","nodeType":"VariableDeclaration","scope":191,"src":"2063:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2063:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"drawnBalance","nameLocation":"2091:12:2","nodeType":"VariableDeclaration","scope":191,"src":"2083:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"facilityBalance","nameLocation":"2121:15:2","nodeType":"VariableDeclaration","scope":191,"src":"2113:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2053:89:2"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"2166:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:2"},"scope":201,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":200,"nodeType":"FunctionDefinition","src":"2181:71:2","nodes":[],"functionSelector":"7443c907","implemented":false,"kind":"function","modifiers":[],"name":"getRates","nameLocation":"2190:8:2","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"id","nameLocation":"2207:2:2","nodeType":"VariableDeclaration","scope":200,"src":"2199:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2199:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2198:12:2"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":195,"name":"uint128","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"2243:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":197,"name":"uint128","nodeType":"ElementaryTypeName","src":"2243:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2233:18:2"},"scope":201,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IInterestRateCredit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[201],"name":"IInterestRateCredit","nameLocation":"166:19:2","scope":202,"usedErrors":[],"usedEvents":[]}],"license":"GPL-3.0"},"id":2}